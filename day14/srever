
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h> 
#include <sys/socket.h>
#include <netinet/in.h>
#include <ctype.h>
#include<arpa/inet.h>


int main(int argc,char *argv[])
{
int sockfd,newsockfd,portno,n;
socklen_t clilen;
char buff[255];
pid_t childpid;
struct sockaddr_in servaddr,cliaddr;
	if(argc<2)
	{
	fprintf(stderr,"error no port provided\n");
	exit(1);
	}
sockfd=socket(AF_INET,SOCK_STREAM,0);
	if(sockfd<0)
	perror("error opening file");

memset(&servaddr,'\0',sizeof(servaddr));
portno=atoi(argv[1]);
servaddr.sin_family=AF_INET;
servaddr.sin_addr.s_addr=INADDR_ANY;
servaddr.sin_port=htons(portno);
if(bind(sockfd,(struct sockaddr *)&servaddr,sizeof(servaddr))<0)
	perror("error in binding");

listen(sockfd,5);

while(1)
{
clilen=sizeof(cliaddr);
newsockfd=accept(sockfd,(struct sockaddr *)&cliaddr,&clilen);
	if(newsockfd<0)
	{
	perror("error on accept");
	}
printf("Connection accepted from %s:%d\n", inet_ntoa(cliaddr.sin_addr), ntohs(cliaddr.sin_port));

if((childpid=fork())==0)
{
close(sockfd);
while(1)
{
FILE *fp ,*fp1;
int command,attid;
int id,id1;
int f=0,l=0,d;

read(newsockfd,buff,255);

command=buff[0];
attid=buff[2];

if(command==1)
{
printf("add the data\n");

fp=fopen("base.txt","a");
fprintf(fp,"%d %d %s %s\n",buff[1],buff[3],&buff[4],&buff[30]);
fclose(fp);
}
	
else if(command==2)
{
printf("displaying the data\n");

fp=fopen("base.txt","r");
char str[100];
char s=buff[1];
     	while(fgets(str,100,fp)!=NULL)
	{
     		if(str[0]==s+'0')
		{
		f=1;
    	 	n= write(newsockfd,str,100);
		if (n < 0)       				
      		perror("error in writing to socket");	
		} 
  	 l++;
      	}
	if(f==0)
	{
	write(newsockfd,"id not found",20);
	}
fclose(fp);
}

else if(command==3)
{
printf("edit the data\n");

char str[100],pp[20];
fp=fopen("base.txt","r+");
char s=buff[1];
printf("enter id is %d:",s);  
printf("att %d:",attid);

while(fgets(str,100,fp)!=NULL)
{

if(str[0]==s+'0')
{
f=1;

	if(attid==1)
	{
	fseek(fp,3,SEEK_SET);
	fputs(buff,fp);	
	}
		
	else if(attid==2)
	{
	fseek(fp,4,SEEK_SET);
	fputs(buff,fp);	
	}
	else if(attid==3)
	{
	fseek(fp,24,SEEK_SET);
	fputs(buff,fp);	
	}
	else if(attid==4)
	{
	fseek(fp,0,SEEK_SET);
	fputs(buff,fp);
	break;
	}
	}
	else
	{
	fputs(str,fp);
	}
 l++;
}
if(f==0)
{
write(newsockfd,"id not found",20);
}
fclose(fp);
}

else if(command==4)
{  
printf("remmove the data\n");

fp=fopen("base.txt","r");
fp1=fopen("mm.txt","a");
char data[100];
char c=buff[1];
while(fgets(data,100,fp)!=NULL)
{
     	if(data[0]==c+'0')
	{
        f=1;
	}
	else
	{
	fputs(data,fp1);
	}
 l++;
} 
	if(f==0)
	{
	write(newsockfd,"id not found",20);
	}
fclose(fp);
fclose(fp1);
remove("base.txt");
rename("mm.txt","base.txt");
remove("mm.txt");
}
}
}
}
close(newsockfd);
return 0;
}
