
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h> 
#include <sys/socket.h>
#include <netinet/in.h>
#include <ctype.h>
#include<arpa/inet.h>


int main(int argc,char *argv[])
{
int sockfd,newsockfd,portno,n;

socklen_t clilen;

char buff[255];
pid_t childpid;
struct sockaddr_in servaddr,cliaddr;

 if(argc<2)
 {
 fprintf(stderr,"error no port provided\n");
 exit(1);
 }

sockfd=socket(AF_INET,SOCK_STREAM,0);
	if(sockfd<0)
	perror("error opening file");

memset(&servaddr,'\0',sizeof(servaddr));

portno=atoi(argv[1]);

servaddr.sin_family=AF_INET;

servaddr.sin_addr.s_addr=INADDR_ANY;

servaddr.sin_port=htons(portno);

if(bind(sockfd,(struct sockaddr *)&servaddr,sizeof(servaddr))<0)

	perror("error in binding");

listen(sockfd,5);
clilen=sizeof(cliaddr);
newsockfd=accept(sockfd,(struct sockaddr *)&cliaddr,&clilen);
  if(newsockfd<0){
    perror("error on accept");
}

FILE *fp ,*fp1;
int command;
int id,id1;
int f=0,l=0,d;

read(newsockfd,buff,8);
command=buff[0];

if(command==1)
{
printf("add the data\n");
read(newsockfd,buff,255);
fp=fopen("base.txt","a");
fprintf(fp,"%d %d %s %s\n",buff[1],buff[2],&buff[3],&buff[30]);
fclose(fp);
}
	
else if(command==2)
{
printf("displaying the data\n");
read(newsockfd,buff,255);
fp=fopen("base.txt","r");

char str[255];
    while(fgets(str,255,fp)!=NULL)
    {
     
	char s=buff[1];
      
        if(str[0]==s+'0')
	{
    	 n= write(newsockfd,str,255);
	if (n < 0)       				
      	perror("error in writing to socket");	
  	} 
 l++;
   
}
fclose(fp);

}

else if(command==3)
{
printf("edit the data\n");
char str[255];

read(newsockfd,buff,255);

printf("enter id is %d:",id1);
fp=fopen("base.txt","r");
fp1=fopen("mm.txt","a");

while(fgets(str,255,fp)!=NULL)
{
     
char s=buff[1];
      
	if(str[0]==s+'0')
	{
	int i=buff[50];
	switch(i)
	{
	//case 1:fprintf(fp1,"%d ",buff[2]);
	//break;
	//case 2:fprintf(fp1,"%s\n",&buff[3]);
	//break;
	}
	}
  l++;
}
}
else if(command==4)
{  
printf("remmove the data\n");
read(newsockfd,buff,255);

int l=0,d,f=0;

fp=fopen("base.txt","r");
fp1=fopen("mm.txt","a");
char data[255];
char c=buff[1];
while(fgets(data,255,fp)!=NULL)
    {
     
     if(data[0]==c+'0')
      {
        f=1;
      }
      else
      {
      fputs(data,fp1);
      }
 l++;
   } 

   if(f==0)
   {
   printf("id not found\n");
   }
fclose(fp);
fclose(fp1);
remove("base.txt");
rename("mm.txt","base.txt");
remove("mm.txt");

}
return 0;
}
